{"version":3,"sources":["redux/action/summaryAction/index.js","redux/action/addScanAction/index.js","page/Dashboard.js","page/login.js","page/scan/index.js","page/signature/index.js","view/SessionByDevice.js","view/reactFusionChart.js","view/chart.js","page/summary/index.js","page/addScan/index.js","page/listScan/index.js","page/aboutUs/index.js","router.js","component/header/styles.js","component/header/index.js","App.js","reportWebVitals.js","constant/STATUS_CODE.js","redux/services/axios.js","redux/services/axiosService.js","redux/api/scanApi/index.js","redux/saga/scanSaga/scanSaga.js","redux/api/signaturesApi/index.js","redux/saga/signaturesSaga/index.js","redux/api/summaryApi/index.js","redux/saga/summarySaga/index.js","redux/api/signStatApi/index.js","redux/saga/signaturesStatSaga/index.js","redux/api/scandetailAPI/index.js","redux/saga/scandetailSaga/index.js","redux/api/addScanApi/index.js","redux/saga/addScanSaga/index.js","redux/saga/sagas.js","redux/reducers/scanReducer/index.js","redux/reducers/signaturesReducer/index.js","redux/reducers/summaryReducer/index.js","redux/reducers/signStatReducer/index.js","redux/reducers/scandetailReducer/index.js","redux/reducers/addScanReducer/index.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js","redux/action/scanAction/scanAction.js","redux/action/scanDetailAction/index.js","constant/config.js","redux/action/signaturesAction/index.js","redux/action/signStatAction/index.js"],"names":["ShowSummaryActions","getSummary","type","GET_SUMMARY_ACTION","getSummarySuccess","data","GET_SUMMARY_SUCCESS","getSummaryFaild","GET_SUMMARY_FAILED","payload","AddScanActions","addScan","scan","ADD_SCAN_ACTION","addScanSuccess","ADD_SCAN_SUCCESS","addScanFaild","ADD_SCAN_FAILED","resetIsSuccess","RESET_IS_SUCCESS_ADD_SCAN","Dashboard","this","props","classes","Grid","container","spacing","item","xs","style","marginTop","float","textAlign","marginLeft","className","src","React","Component","protoTypes","ProtoTypes","object","withConnect","connect","state","ownProps","dispatch","compose","withStyles","styles","Login","StyledTableCell","theme","head","backgroundColor","color","palette","common","black","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","dataAPI","ScanReducer","loading","scanActions","getScan","scanDetailActions","bindActionCreators","useEffect","history","useHistory","useState","page","setPage","rowsPerPage","setRowsPerPage","width","height","position","to","activeClassName","Fab","variant","top","right","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","slice","map","row","Button","onClick","id","ScanID","setScanID","push","created_at","Chip","chip","label","SignatureID","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","CircularProgress","colors","name","SignaturesReducer","signaturesActions","SignaturesAction","getSignatures","index","SignID","Name","background","find","elem","Risk","AsbPath","SessionByDevice","options","chart","toolbar","show","dataLabels","enabled","legend","labels","stroke","Info","Potential","Low","Medium","High","Critical","fill","gradient","gradientToColors","InfoLight","PotentialLight","LowLight","MediumLight","HighLight","CriticalLight","series","nextProps","nextContext","setState","Card","CardHeader","CardTitle","CardBody","Box","p","bgcolor","charts","FusionCharts","ApexChart","signStatAction","getSignStat","plotOptions","bar","borderRadius","horizontal","xaxis","categories","dataColum","SignStatReducer","SummaryReducer","dataApi","summaryAction","SummaryAction","bullet","display","margin","transform","title","pos","marginBottom","paper","overflow","selectEmpty","not","a","b","filter","indexOf","intersection","signatures","isSuccess","AddScanReducer","showSignaturesActions","ShowSignaturesActions","addScanAction","setLeft","left","checked","setChecked","setRight","concurence","setConcurence","url","setUrl","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","customList","items","List","dense","role","labelId","ListItem","button","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","ListItemText","primary","size","align","toast","error","signList","forEach","host","num","TextField","onChange","alignItems","direction","concat","disabled","InputLabel","Select","MenuItem","padding","ScandetailReducer","useLayoutEffect","getScandetail","sm","Issues","ReqRaw","paddingBottom","CodeSnippet","select","inline","boolean","light","feedback","text","feedbackTimeout","number","showMoreText","showLessText","hideCopyButton","copyButtonDescription","ariaLabel","wrapText","maxCollapsedNumberOfRows","maxExpandedNumberOfRows","ResRaw","AboutUs","CardContent","routes","path","exact","main","flexGrow","menuButton","marginRight","dropDown","borderColor","Header","toggle","dropDownOpen","handleClick","iconMenuOpen","currentTarget","handleClose","open","Boolean","Navbar","expand","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","pills","NavItem","NavLink","IconButton","aria-controls","aria-haspopup","Menu","anchorEl","keepMounted","onClose","PaperProps","maxHeight","option","selected","propTypes","bool","dark","fixed","string","oneOfType","tag","func","tabs","card","justified","vertical","active","innerRef","App","showContentMenus","result","route","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","STATUS_CODE","SUCCESS","CREATED","UPDATED","AUTHEN_FALSE","callApi","endpoint","method","axios","Config","header","res","status","StatusCode","catch","err","console","log","response","JSON","parse","stringify","getScans","uri","axiosService","get","getScanAction","getScanSaga","call","Api","resp","scans","delay","put","scanAction","getScanSuccess","getScanFaild","takeLatest","config","getSignaturesAction","getSignaturesSaga","signaturesAction","getSignaturesSuccess","getSignaturesFaild","getSummaryAction","getSummarySaga","stats","getSignStatAction","getSignStatSaga","getSignStatSuccess","getSignStatFaild","getScanDetails","getScandetailAction","getScandetailSaga","records","scandetailAction","getScandetailSuccess","post","addScanActions","addScanSaga","rootSaga","fork","scanSaga","signaturesSaga","summarySaga","signStatSaga","initial","i","newResRaw","atob","newReqRaw","success","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","run","mySaga","ReactDOM","render","document","getElementById","ShowScanActions","GET_SCAN_ACTION","GET_SCAN_SUCCESS","GET_SCAN_FAILED","ShowScandetailActions","GET_SCANDETAIL_ACTION","GET_SCANDETAIL_SUCCESS","getScandetailFaild","GET_SCANDETAIL_FAILED","SET_SCANID_ACTION","API_ENDPOINT_SERVER","GET_SIGNATURE_FAILED","GET_SIGNATURE_SUCCESS","GET_SIGNATURE_ACTION","GET_SIGN_STAT_FAILED","GET_SIGN_STAT_SUCCESS","GET_SIGN_STAT_ACTION","ShowSignStatActions"],"mappings":"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","file":"static/js/main.0bb83621.chunk.js","sourcesContent":["import {\r\n    GET_SUMMARY_ACTION,GET_SUMMARY_FAILED,GET_SUMMARY_SUCCESS\r\n} from \"../../../constant/config\";\r\n\r\nconst ShowSummaryActions = {\r\n    getSummary,\r\n    getSummarySuccess,\r\n    getSummaryFaild,\r\n}\r\n\r\nfunction getSummaryFaild() {\r\n    return{\r\n        type: GET_SUMMARY_FAILED,\r\n        payload:{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSummarySuccess(data) {\r\n    return{\r\n        type: GET_SUMMARY_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nfunction getSummary() {\r\n    return {\r\n        type: GET_SUMMARY_ACTION,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ShowSummaryActions;","import {\r\n    ADD_SCAN_ACTION,ADD_SCAN_FAILED,ADD_SCAN_SUCCESS,RESET_IS_SUCCESS_ADD_SCAN\r\n} from \"../../../constant/config\";\r\n\r\nconst AddScanActions = {\r\n    addScan,\r\n    addScanSuccess,\r\n    addScanFaild,\r\n    resetIsSuccess,\r\n}\r\n\r\nfunction addScanFaild() {\r\n    return{\r\n        type: ADD_SCAN_FAILED\r\n    }\r\n}\r\n\r\nfunction addScanSuccess() {\r\n    return{\r\n        type: ADD_SCAN_SUCCESS,\r\n    }\r\n}\r\n\r\nfunction addScan(scan) {\r\n    return {\r\n        type: ADD_SCAN_ACTION,\r\n        payload:{\r\n            scan:scan\r\n        }\r\n    }\r\n}\r\n\r\nfunction resetIsSuccess(){\r\n    return {\r\n        type: RESET_IS_SUCCESS_ADD_SCAN\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddScanActions;\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './styles';\nimport {withStyles} from \"@material-ui/styles\";\nimport {connect} from \"react-redux\";\nimport ProtoTypes from 'prop-types';\nimport {compose} from \"redux\";\n\n\nclass Dashboard extends React.Component {\n    render() {\n        const {classes} = this.props\n        return (\n            <Grid container spacing={0}>\n                <Grid item xs={12} style={{marginTop:\"30px\"}}>\n                    <Grid item xs={3} style={{float: \"left\",textAlign: \"left\",marginLeft:\"50px\"}}>\n                        <h2 className=\"landing-page__subheading\">What is GoSc4n?</h2>\n                        <p>\n                            GoSc4n is a powerful, flexible\n                            written in Go which aims to offer a way to build your own Web\n                            Application Scanner.\n                        </p>\n                    </Grid>\n                    <Grid item xs={8} style={{float: \"left\"}}>\n                            <img\n                                src=\"/static/Roadmap.png\"\n                                style={{marginLeft:100}}\n                            />\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nDashboard.protoTypes = {\n    classes: ProtoTypes.object,\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {}\n}\nconst withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n\nexport default compose(withStyles(styles), withConnect)(Dashboard);","import React from 'react';\r\n\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport scanActions from \"../../redux/action/scanAction/scanAction\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport scanDetailActions from \"../../redux/action/scanDetailAction\";\r\nimport {useHistory} from 'react-router'\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#D7DBDD',\r\n        color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n    },\r\n});\r\n\r\n\r\nfunction CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        props.scanActions()\r\n    }, []);\r\n\r\n    let history = useHistory()\r\n    const addPage = () => {\r\n        history.push(\"/addScan\")\r\n    }\r\n\r\n    const listPage = (id) => {\r\n        props.scanDetailActions.setScanID(id)\r\n        history.push(\"/listScan\")\r\n    }    \r\n\r\n    const getScanDetail = (ScanID) => {\r\n        props.scanDetailActions.getScandetail(ScanID)\r\n    }\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    return (\r\n        <>\r\n            <h2>Scan Summary</h2>\r\n            <div style={{width: \"auto\", height: \"3px\", backgroundColor: \"gray\"}}></div>\r\n            <div style={{width: \"auto\", height: \"100px\", position: \"relative\"}}>\r\n                <Link to=\"/addScan\" className={classes.activeClassName}>\r\n                    <Fab variant=\"extended\" style={{position: \"absolute\", top: \"25px\", right: \"10px\"}}>\r\n                        <AddIcon/>\r\n                        Add Record\r\n                    </Fab>\r\n                </Link>\r\n\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Detail</StyledTableCell>\r\n                            <StyledTableCell>Scan ID</StyledTableCell>\r\n                            <StyledTableCell>Mode</StyledTableCell>\r\n                            <StyledTableCell>Create At</StyledTableCell>\r\n                            <StyledTableCell>Signatures</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.dataAPI ?\r\n                            props.dataAPI.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                                <StyledTableRow>\r\n                                    <StyledTableCell  style={{ width: \"15%\" }}>\r\n                                        <Button onClick={()=> listPage(row.ScanID)/**()=>getScanDetail(row.ScanID) */} variant=\"contained\" color=\"black\">\r\n                                            <VisibilityIcon/>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell>{row.ScanID}</StyledTableCell>\r\n                                    <StyledTableCell>Scan</StyledTableCell>\r\n                                    <StyledTableCell>{row.created_at}</StyledTableCell>\r\n                                    <StyledTableCell><Chip className={classes.chip} style={{backgroundColor: \"#6cec94\"}}\r\n                                                           label={row.SignatureID}/></StyledTableCell>\r\n                                </StyledTableRow>\r\n                            )) : null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15]}\r\n                component=\"div\"\r\n                count={props.dataAPI?props.dataAPI.length:0}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            {\r\n                props.loading ?\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        scanActions: () => dispatch(scanActions.getScan()),\r\n        scanDetailActions:bindActionCreators(scanDetailActions,dispatch),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        dataAPI: state.ScanReducer.data,\r\n        loading: state.ScanReducer.loading\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)\r\n\r\nexport default compose(withConnect)(CustomizedTables);","import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport SignaturesAction from '../../redux/action/signaturesAction'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#D7DBDD',\r\n        color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n    },\r\n});\r\n\r\n\r\nlet colors =[\r\n    {name:\"Info\",value:\"#81F4E5\"},\r\n    {name:\"Potential\",value:\"#678EF3\"},\r\n    {name:\"Low\",value:\"#EFF876\"},\r\n    {name:\"Medium\",value:\"#03FA14\"},\r\n    {name:\"High\",value:\"#FC6202\"},\r\n    {name:\"Critical\",value:\"#FE0606\"}\r\n]\r\n\r\n\r\n\r\nfunction CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        props.signaturesActions()\r\n    }, []);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    return (\r\n        <>\r\n            <h2>Signatures Summary</h2>\r\n            <div style={{width:\"auto\", height:\"3px\" ,backgroundColor:\"gray\"}}></div>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>STT</StyledTableCell>\r\n                            <StyledTableCell>SignatureID</StyledTableCell>\r\n                            <StyledTableCell>Signature</StyledTableCell>\r\n                            <StyledTableCell>Risk</StyledTableCell>\r\n                            <StyledTableCell>Absolute Path</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.dataAPI ?\r\n                            props.dataAPI.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => (\r\n                                <StyledTableRow>\r\n                                    <StyledTableCell>{page * rowsPerPage + index + 1}</StyledTableCell>\r\n                                    <StyledTableCell><Chip className={classes.chip} style={{backgroundColor:\"#6cec94\"}} label={row.SignID}/></StyledTableCell>\r\n                                    <StyledTableCell>{row.Name}</StyledTableCell>\r\n                                    <StyledTableCell><Chip className={classes.chip} style={{\r\n                                        background:colors.find(elem => elem.name==row.Risk).value,\r\n                                        color:\"white\"\r\n                                    }} label={row.Risk}/></StyledTableCell>\r\n                                    <StyledTableCell>{row.AsbPath}</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            )):null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15]}\r\n                component=\"div\"\r\n                count={props.dataAPI?props.dataAPI.length:0}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            {\r\n                props.loading?\r\n                    <CircularProgress color=\"secondary\" />\r\n                    :null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signaturesActions: () => dispatch(SignaturesAction.getSignatures()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        dataAPI:state.SignaturesReducer.data,\r\n        loading:state.SignaturesReducer.loading\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\n\r\nexport default compose(withConnect)(CustomizedTables);","import React from \"react\"\r\nimport {Card, CardBody, CardHeader, CardTitle} from \"reactstrap\"\r\nimport Chart from \"react-apexcharts\"\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass SessionByDevice extends React.Component {\r\n\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.series !== this.props.series){\r\n            this.setState({...this.state,series:nextProps.series})\r\n        }\r\n    }\r\n\r\n    state = {\r\n        options: {\r\n            chart: {\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {show: false},\r\n            // comparedResult: [2, -3, 8],\r\n            labels: [\"Info\", \"Potential\", \"Low\", \"Medium\", \"High\", \"Critical\"],\r\n            stroke: {width: 0},\r\n            colors: [this.props.Info, this.props.Potential, this.props.Low, this.props.Medium, this.props.High, this.props.Critical],\r\n            fill: {\r\n                type: \"gradient\",\r\n                gradient: {\r\n                    gradientToColors: [\r\n                        this.props.InfoLight,\r\n                        this.props.PotentialLight,\r\n                        this.props.LowLight,\r\n                        this.props.MediumLight,\r\n                        this.props.HighLight,\r\n                        this.props.CriticalLight\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        series: this.props.series?this.props.series:[0,0,0,0,0,0]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle>Vulnerabitity Summary</CardTitle>\r\n                    {/*<UncontrolledDropdown>*/}\r\n                    {/*    <DropdownToggle tag=\"small\" className=\"text-bold-500 cursor-pointer\">*/}\r\n                    {/*        Last 7 days <ChevronDown size={10}/>*/}\r\n                    {/*    </DropdownToggle>*/}\r\n                    {/*    <DropdownMenu right>*/}\r\n                    {/*        <DropdownItem>Last 28 days</DropdownItem>*/}\r\n                    {/*        <DropdownItem>Last Month</DropdownItem>*/}\r\n                    {/*        <DropdownItem>Last Year</DropdownItem>*/}\r\n                    {/*    </DropdownMenu>*/}\r\n                    {/*</UncontrolledDropdown>*/}\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0\">\r\n                    <Chart\r\n                        options={this.state.options}\r\n                        series={this.state.series}\r\n                        type=\"donut\"\r\n                        height={500}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        {this.state.options.labels ? this.state.options.labels.map((label, index) => (\r\n                            <Grid item xs={2}>\r\n                                <span className=\"text-bold-600 mx-50\">{label}</span>\r\n                                <span className=\"align-middle\"> -{this.props.series?this.props.series[index]:null}</span>\r\n                                <Box p={2}\r\n                                     bgcolor={\r\n                                         label === \"Info\" ? this.props.Info :\r\n                                         label === \"Potential\" ? this.props.Potential :\r\n                                         label === \"Low\" ? this.props.Low :\r\n                                         label === \"Medium\" ? this.props.Medium :\r\n                                         label === \"High\" ? this.props.High :\r\n                                         label === \"Critical\" ? this.props.Critical : null\r\n                                     }\r\n                                     color=\r\n                                         {\r\n                                             label === \"Info\" ? this.props.Info :\r\n                                             label === \"Potential\" ? this.props.Potential :\r\n                                             label === \"Low\" ? this.props.Low :\r\n                                             label === \"Medium\" ? this.props.Medium :\r\n                                             label === \"High\" ? this.props.High :\r\n                                             label === \"Critical\" ? this.props.Critical : null\r\n                                         }\r\n                                ></Box>\r\n                            </Grid>\r\n                        )) : \"\"}\r\n                    </Grid>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SessionByDevice\r\n","import FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport React from 'react';\r\nimport {Card, CardBody, CardHeader, CardTitle} from \"reactstrap\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\n\r\n\r\nclass MyComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle>Payloads Summary</CardTitle>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0\">\r\n                    <ReactFusioncharts\r\n                        type=\"column3d\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        dataFormat=\"JSON\"\r\n                        dataSource={this.props.data}\r\n                        height={541}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComponent;","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport signStatAction from \"../redux/action/signStatAction\";\r\n\r\n\r\nclass ApexChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.signStatAction.getSignStat()\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={{\r\n                    chart: {\r\n                        type: 'bar',\r\n                    },\r\n                    plotOptions: {\r\n                        bar: {\r\n                            borderRadius: 4,\r\n                            horizontal: true,\r\n                        }\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    xaxis: {\r\n                        categories: this.props.categories ? this.props.categories : []\r\n                    }\r\n\r\n                }} series={[{\r\n                    data: this.props.dataColum ? this.props.dataColum : []\r\n                }]} type=\"bar\" height={620}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signStatAction: bindActionCreators(signStatAction, dispatch)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        dataColum: state.SignStatReducer.data,\r\n        categories: state.SignStatReducer.categories\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\n\r\n\r\nexport default compose(withConnect)(ApexChart);","import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport SessionByDevice from \"../../view/SessionByDevice\";\r\nimport SummaryAction from '../../redux/action/summaryAction'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FusionChart from '../../view/reactFusionChart'\r\nimport signStatAction from '../../redux/action/signStatAction'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ApexChart from '../../view/chart'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n    },\r\n});\r\n\r\nlet $info = \"#02FAD9\",\r\n    $potential = \"#0349FC\",\r\n    $low = \"#EBFB04\",\r\n    $medium = \"#03FA14\",\r\n    $high = \"#FC6202\",\r\n    $critical = \"#FE0606\",\r\n    $info_light = \"#81F4E5\",\r\n    $potential_light = \"#678EF3\",\r\n    $low_light = \"#EFF876\",\r\n    $medium_light = \"#82F58A\",\r\n    $high_light = \"#FCA975\",\r\n    $critical_light = \"#FD8585\"\r\n\r\n\r\nfunction SummaryPage(props) {\r\n\r\n    useEffect(() => {\r\n        props.summaryAction.getSummary()\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={6}>\r\n                <SessionByDevice\r\n                    series={props.dataApi?props.dataApi:null}\r\n                    Info={$info}\r\n                    Potential={$potential}\r\n                    Low={$low}\r\n                    Medium={$medium}\r\n                    High={$high}\r\n                    Critical={$critical}\r\n                    InfoLight={$info_light}\r\n                    PotentialLight={$potential_light}\r\n                    LowLight={$low_light}\r\n                    MediumLight={$medium_light}\r\n                    HighLight={$high_light}\r\n                    CriticalLight={$critical_light}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <ApexChart/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        summaryAction: bindActionCreators(SummaryAction, dispatch),\r\n        signStatAction:bindActionCreators(signStatAction,dispatch)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        loading: state.SummaryReducer.loading,\r\n        dataApi: state.SummaryReducer.data,\r\n        dataColum:state.SignStatReducer.data,\r\n        categories:state.SignStatReducer.categories\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\n\r\nexport default compose(withConnect)(SummaryPage);","import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport scanActions from \"../../redux/action/scanAction/scanAction\";\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport scanDetailActions from \"../../redux/action/scanDetailAction\";\r\nimport {useHistory} from 'react-router'\r\nimport ShowSignaturesActions from \"../../redux/action/signaturesAction\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport {toast} from 'react-toastify';\r\nimport addScanAction from '../../redux/action/addScanAction'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    root: {\r\n        minWidth: 500,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    paper: {\r\n        width: 200,\r\n        height: 300,\r\n        overflow: 'auto',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: 2,\r\n    },\r\n});\r\n\r\nfunction not(a, b) {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\n\r\nfunction AddScan(props) {\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        props.showSignaturesActions.getSignatures()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLeft(props.signatures)\r\n    }, [props.signatures])\r\n\r\n    useEffect(()=>{\r\n        if(props.isSuccess===true){\r\n            props.addScanAction.resetIsSuccess()\r\n            history.push(\"/scans\")\r\n        }\r\n    },[props.isSuccess])\r\n    const [left, setLeft] = React.useState([]);\r\n\r\n    let history = useHistory()\r\n    const [checked, setChecked] = React.useState([]);\r\n    const [right, setRight] = React.useState([]);\r\n    const [concurence, setConcurence] = React.useState(null);\r\n    const [url, setUrl] = React.useState('')\r\n    const handleChange = (event) => {\r\n        setConcurence(event.target.value);\r\n    };\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleAllRight = () => {\r\n        setRight(right.concat(left));\r\n        setLeft([]);\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRight(right.concat(leftChecked));\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const handleAllLeft = () => {\r\n        setLeft(left.concat(right));\r\n        setRight([]);\r\n    };\r\n\r\n    const handleUrl = (value) => {\r\n        setUrl(value.target.value)\r\n    }\r\n\r\n    const sendForm = () => {\r\n        if (right.length === 0) {\r\n            toast.error(\"No signature loaded!\")\r\n        }\r\n        else if(url===\"\"){\r\n            toast.error(\"No url!\")\r\n        }\r\n        else if(concurence==null){\r\n            toast.error(\"No concurence!\")\r\n        }\r\n        else{\r\n            var signList = []\r\n            right.forEach(item=>{\r\n                signList.push(item.AsbPath)\r\n            })\r\n            props.addScanAction.addScan({\r\n                host:url,\r\n                signatures:signList,\r\n                num:concurence\r\n            })\r\n        }\r\n    }\r\n\r\n    const customList = (items) => (\r\n        <Paper className={classes.paper}>\r\n            <List dense component=\"div\" role=\"list\">\r\n                {\r\n                    left ?\r\n                        items.map((value) => {\r\n                            const labelId = `transfer-list-item-${value}-label`;\r\n\r\n                            return (\r\n                                <ListItem key={value.id} role=\"listitem\" button onClick={handleToggle(value)}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            checked={checked.indexOf(value) !== -1}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{'aria-labelledby': labelId}}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText id={labelId} primary={`${value.Name}`}/>\r\n                                </ListItem>\r\n                            );\r\n                        }) : null}\r\n                <ListItem/>\r\n            </List>\r\n        </Paper>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <h1>Add New Record</h1>\r\n            <TableContainer component={Paper} style={{marginTop: \"30\"}}>\r\n                <Table className={classes.table} aria-label=\"simple table\" size=\"medium\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell width=\"40%\"></TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={sendForm} variant=\"contained\" color=\"primary\">\r\n                                    Scan\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>URL</TableCell>\r\n                            <TableCell align=\"left\">\r\n                                <TextField onChange={handleUrl} id=\"standard-basic\" label=\"Url\"/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Signatures</TableCell>\r\n                            <TableCell align=\"left\">\r\n\r\n                                {\r\n                                    props.loading ?\r\n                                        <CircularProgress color=\"secondary\"/>\r\n                                        : <Grid container spacing={2} alignItems=\"flex-end\">\r\n                                            <Grid item>Choices{customList(left)}</Grid>\r\n                                            <Grid item>\r\n                                                <Grid container direction=\"column\" alignItems=\"flex-center\">\r\n                                                    <Button\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        className={classes.button}\r\n                                                        onClick={handleAllRight}\r\n                                                        disabled={left ? left.length === 0 : false}\r\n                                                        aria-label=\"move all right\"\r\n                                                    >\r\n                                                        ≫\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        className={classes.button}\r\n                                                        onClick={handleCheckedRight}\r\n                                                        disabled={leftChecked.length === 0}\r\n                                                        aria-label=\"move selected right\"\r\n                                                    >\r\n                                                        &gt;\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        className={classes.button}\r\n                                                        onClick={handleCheckedLeft}\r\n                                                        disabled={rightChecked.length === 0}\r\n                                                        aria-label=\"move selected left\"\r\n                                                    >\r\n                                                        &lt;\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        className={classes.button}\r\n                                                        onClick={handleAllLeft}\r\n                                                        disabled={right.length === 0}\r\n                                                        aria-label=\"move all left\"\r\n                                                    >\r\n                                                        ≪\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>Chosen{customList(right)}</Grid>\r\n                                        </Grid>\r\n                                }\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>Concurency</TableCell>\r\n                            <TableCell align=\"left\">\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Concurence</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={concurence}\r\n                                    onChange={handleChange}\r\n                                    label=\"Concurence\"\r\n                                >\r\n                                    <MenuItem value={10}>10</MenuItem>\r\n                                    <MenuItem value={20}>20</MenuItem>\r\n                                    <MenuItem value={30}>30</MenuItem>\r\n                                </Select>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSignaturesActions: bindActionCreators(ShowSignaturesActions, dispatch),\r\n        addScanAction:bindActionCreators(addScanAction,dispatch)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        signatures: state.SignaturesReducer.data,\r\n        loading: state.SignaturesReducer.loading,\r\n        isSuccess:state.AddScanReducer.isSuccess\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)\r\n\r\nexport default compose(withConnect)(AddScan);","import React, {useEffect, useLayoutEffect} from 'react';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators, compose} from \"redux\";\r\nimport scanActions from \"../../redux/action/scanAction/scanAction\";\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport scanDetailActions from \"../../redux/action/scanDetailAction\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {CodeSnippet} from 'carbon-components-react';\r\nimport copy from 'clipboard-copy';\r\nimport {\r\n    withKnobs,\r\n    boolean,\r\n    text,\r\n    select,\r\n    number,\r\n} from '@storybook/addon-knobs';\r\nimport {action} from '@storybook/addon-actions';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        padding: 2,\r\n        textAlign: 'left',\r\n    },\r\n});\r\n\r\n\r\nfunction CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    useLayoutEffect(() => {\r\n        props.scanDetailActions.getScandetail(props.id)\r\n    }, []);\r\n\r\n    const getScanDetail = (ScanID) => {\r\n        props.scanDetailActions.getScandetail(ScanID)\r\n    }\r\n    const propss = () => ({\r\n        type: select(\r\n            'Type (type)',\r\n            {\r\n                inline: 'inline',\r\n                'single line': 'single',\r\n                'multiple line': 'multi',\r\n            },\r\n            'inline'\r\n        ),\r\n        disabled: boolean('Disabled (disabled)', false),\r\n        light: boolean('Light variant (light)', false),\r\n        feedback: text('Feedback text (feedback)', 'Copied to clipboard'),\r\n        feedbackTimeout: number('Feedback text timout (feedbackTimeout)', 2000),\r\n        showMoreText: text('Text for \"show more\" button', 'Show more'),\r\n        showLessText: text('Text for \"show less\" button', 'Show less'),\r\n        hideCopyButton: boolean('Hide copy button (hideCopyButton)', false),\r\n        onClick: action('onClick'),\r\n        copyButtonDescription: text('Copy button title', 'Copy code snippet'),\r\n        ariaLabel: text('ARIA label', 'Container label'),\r\n        wrapText: boolean('Wrap text (wrapText)', true),\r\n        maxCollapsedNumberOfRows: number(\r\n            'maxCollapsedNumberOfRows: Specify the maximum number of rows to be shown when in collapsed view',\r\n            15\r\n        ),\r\n        maxExpandedNumberOfRows: number(\r\n            'maxExpandedNumberOfRows: Specify the maximum number of rows to be shown when in expanded view',\r\n            0\r\n        ),\r\n    });\r\n    return (\r\n        <>\r\n            <h1>List Records</h1>\r\n            {props.dataAPI ?\r\n                props.dataAPI.map((row) => {\r\n                    return (\r\n                        <div>\r\n                            <h2>Record</h2>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6} sm={6}>\r\n                                    <Paper style={{textAlign: 'center'}} className={classes.paper}>Issues:\r\n                                        <Chip className={classes.chip} style={{backgroundColor: \"#90EE90\"}}\r\n                                              label={row.Issues}/>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm={6}>\r\n                                    <Paper style={{textAlign: 'center'}}\r\n                                           className={classes.paper}>Risk:\r\n                                        <Chip className={classes.chip} style={{backgroundColor: \"#CD5C5C\"}}\r\n                                              label={row.Risk}/>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <h3 style={{textAlign: \"left\"}}>Request</h3>\r\n                                        {row.ReqRaw}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Grid item xs={12}>\r\n                                            <h4 style={{textAlign: 'left', paddingBottom: '5px'}}>Response</h4>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <CodeSnippet {...propss()} type=\"multi\" feedback=\"Copied to clipboard\">\r\n                                                {row.ResRaw}\r\n                                            </CodeSnippet>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                    )\r\n                }) : null\r\n            }\r\n            {\r\n                props.loading ?\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        scanActions: () => dispatch(scanActions.getScan()),\r\n        scanDetailActions: bindActionCreators(scanDetailActions, dispatch)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        dataAPI: state.ScandetailReducer.data,\r\n        loading: state.ScandetailReducer.loading,\r\n        id: state.ScandetailReducer.id\r\n    }\r\n}\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)\r\n\r\nexport default compose(withConnect)(CustomizedTables);","import React, {Component} from 'react';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {CardContent} from \"@material-ui/core\";\r\n\r\nclass AboutUs extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <br/>\r\n                <Card style={{width: \"70%\", marginLeft: \"15%\", height: \"700\"}}>\r\n                    <CardHeader>\r\n\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <h1># About us</h1><br/>\r\n                        <div style={{textAlign: \"left\"}}>\r\n                            <div style={{width: \"50%\", height: \"30%\", marginLeft: \"30%\"}}>\r\n                                ▶We are currently the final year students of FPT University.<br/>\r\n                                ▶Our passion is developing security-related software<br/>\r\n                                ▶This product is used to scan for security vulnerabilities on the Web Application\r\n                                platform\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/><br/>\r\n\r\n                        <h1># Projects</h1><br/>\r\n                        <div style={{textAlign: \"left\"}}>\r\n                            <div style={{width: \"50%\", height: \"30%\", marginLeft: \"30%\"}}>\r\n                                ▶goSc4n- for automated Web Application Testing.\r\n                                <br/><br/>\r\n                                ▶fuzzSc4n - for reconnaissance and vulnerability scanning. (Expected)\r\n                            </div>\r\n                        </div>\r\n                        <br/><br/><br/>\r\n                        <h1># Contact us</h1>\r\n                        ▶<span style={{color: \"blue\"}}><u>goSc4n_fpt@gmail.com</u></span>\r\n                        <br/><br/><br/>\r\n                        <h1># Support me</h1>\r\n                        <br/>\r\n                        <br/>\r\n                        <div style={{textAlign: \"left\"}}>\r\n                            <div style={{width: \"50%\", height: \"30%\", marginLeft: \"30%\"}}>\r\n                                ▶If you love my tools and would like to support my work, please send me an email.\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                    <CardHeader>\r\n\r\n                    </CardHeader>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;","import React from 'react';\r\nimport Dashboard from \"./page/Dashboard\";\r\nimport Login from './page/login'\r\nimport Scans from './page/scan';\r\nimport Signatures from './page/signature'\r\nimport Summary from './page/summary'\r\nimport AddScan from \"./page/addScan\";\r\nimport ListScan from \"./page/listScan\";\r\nimport AboutUs from './page/aboutUs'\r\n\r\nconst routes = [\r\n    {\r\n        path:\"/\",\r\n        exact:true,\r\n        main:()=><Dashboard />\r\n    },\r\n    {\r\n        path:\"/scans\",\r\n        exact: false,\r\n        main:()=><Scans/>\r\n    },\r\n    {\r\n        path:\"/signatures\",\r\n        exact: false,\r\n        main:()=><Signatures/>\r\n    },\r\n    {\r\n        path:\"/summary\",\r\n        exact: false,\r\n        main:()=><Summary />\r\n    },\r\n    {\r\n        path:\"/login\",\r\n        exact: false,\r\n        main:()=><Login/>\r\n    },\r\n    {\r\n        path:\"/addScan\",\r\n        exact: false,\r\n        main:()=><AddScan />\r\n    },\r\n    {\r\n        path:\"/listScan\",\r\n        exact:false,\r\n        main:()=><ListScan />\r\n\r\n    },\r\n    {\r\n        path:\"/\",\r\n        exact:false,\r\n        main:()=><AboutUs />\r\n\r\n    }\r\n];\r\n\r\nexport default routes","const styles =theme=>({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: 2,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    dropDown: {\r\n        background:\"#3f51b5 !important\",\r\n        borderColor:\"#3f51b5 !important\"\r\n    }\r\n})\r\n\r\nexport default styles","import React, {Component} from 'react';\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport ProtoTypes from 'prop-types';\r\nimport styles from './styles';\r\nimport {Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink} from 'reactstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst options = [\r\n    'Login',\r\n];\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value: 0,\r\n            dropDownOpen: false,\r\n            iconMenuOpen: null\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({...this.state, dropDownOpen: !this.state.dropDownOpen})\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        this.setState({...this.state,iconMenuOpen:event.currentTarget});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({...this.state,iconMenuOpen:null});\r\n    };\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        let open = Boolean(this.state.iconMenuOpen)\r\n        return (\r\n            <div className={classes.root}>\r\n                <Navbar color=\"dark\" light expand=\"md\">\r\n                    <NavbarBrand style={{color:\"white\"}} href=\"/\"><h3>GoSc4n</h3></NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle}/>\r\n                    <Collapse isOpen={this.state.dropDownOpen} navbar>\r\n                        <Nav  className=\"mr-auto\" pills>\r\n                            <NavItem>\r\n                                <NavLink href=\"/summary\">Summary</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/scans\">Scans</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/signatures\">Signatures</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/teamDetail\">About Us</NavLink>\r\n                            </NavItem>\r\n                            {/*<UncontrolledDropdown nav inNavbar>*/}\r\n                            {/*    <DropdownToggle nav caret>*/}\r\n                            {/*        Controls*/}\r\n                            {/*    </DropdownToggle>*/}\r\n                            {/*    <DropdownMenu right>*/}\r\n                            {/*        <DropdownItem>*/}\r\n                            {/*            Option 1*/}\r\n                            {/*        </DropdownItem>*/}\r\n                            {/*        <DropdownItem>*/}\r\n                            {/*            Option 2*/}\r\n                            {/*        </DropdownItem>*/}\r\n                            {/*        <DropdownItem divider/>*/}\r\n                            {/*        <DropdownItem>*/}\r\n                            {/*            Reset*/}\r\n                            {/*        </DropdownItem>*/}\r\n                            {/*    </DropdownMenu>*/}\r\n                            {/*</UncontrolledDropdown>*/}\r\n                        </Nav>\r\n                        <IconButton\r\n                            style={{color:\"white\"}}\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            <MoreVertIcon/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={this.state.iconMenuOpen}\r\n                            keepMounted\r\n                            open={open}\r\n                            onClose={this.handleClose}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {options.map((option) => (\r\n                                <MenuItem key={option} selected={option === 'Pyxis'} onClick={this.handleClose}>\r\n                                    <NavItem>\r\n                                        <NavLink href=\"/login\">{option}</NavLink>\r\n                                    </NavItem>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    light: ProtoTypes.bool,\r\n    dark: ProtoTypes.bool,\r\n    fixed: ProtoTypes.string,\r\n    color: ProtoTypes.string,\r\n    role: ProtoTypes.string,\r\n    expand: ProtoTypes.oneOfType([ProtoTypes.bool, ProtoTypes.string]),\r\n    tag: ProtoTypes.oneOfType([ProtoTypes.func, ProtoTypes.string])\r\n}\r\n\r\nNav.propTypes = {\r\n    tabs: ProtoTypes.bool,\r\n    pills: ProtoTypes.bool,\r\n    card: ProtoTypes.bool,\r\n    justified: ProtoTypes.bool,\r\n    fill: ProtoTypes.bool,\r\n    vertical: ProtoTypes.oneOfType([ProtoTypes.bool, ProtoTypes.string]),\r\n    horizontal: ProtoTypes.string,\r\n    navbar: ProtoTypes.bool,\r\n    tag: ProtoTypes.oneOfType([ProtoTypes.func, ProtoTypes.string])\r\n    // pass in custom element to use\r\n}\r\n\r\nNavItem.propTypes = {\r\n    tag: ProtoTypes.oneOfType([ProtoTypes.func, ProtoTypes.string]),\r\n    active: ProtoTypes.bool,\r\n    // pass in custom element to use\r\n}\r\n\r\nNavLink.propTypes = {\r\n    disabled: ProtoTypes.bool,\r\n    active: ProtoTypes.bool,\r\n    // pass in custom element to use\r\n    tag: ProtoTypes.oneOfType([ProtoTypes.func,ProtoTypes.string]),\r\n    // ref will only get you a reference to the NavLink component, use innerRef to get a reference to the DOM element (for things like focus management).\r\n    innerRef: ProtoTypes.oneOfType([ProtoTypes.func, ProtoTypes.string])\r\n}\r\n\r\nNavbarBrand.propTypes = {\r\n    tag: ProtoTypes.oneOfType([ProtoTypes.func, ProtoTypes.string])\r\n    // pass in custom element to use\r\n}\r\n\r\n\r\nHeader.protoTypes = {\r\n    classes: ProtoTypes.object,\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import './App.css';\r\nimport routes from './router'\r\nimport React, {Component} from \"react\";\r\nimport { Switch,Route,BrowserRouter as Router} from 'react-router-dom'\r\nimport { createBrowserHistory } from \"history\";\r\nimport Header from \"./component/header\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n        <Router history={createBrowserHistory()}>\r\n          <Header />\r\n          <ToastContainer />\r\n          <div className=\"App\">\r\n            {this.showContentMenus(routes)}\r\n          </div>\r\n        </Router>\r\n    );\r\n  }\r\n  showContentMenus = (routes)=>{\r\n    let result = null;\r\n    if(routes.length > 0){\r\n      result = routes.map((route,index) =>\r\n          <Route\r\n              key={index}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              component={route.main}\r\n          />\r\n      );\r\n    }\r\n    return <Switch>{result}</Switch>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const STATUS_CODE = {\n  SUCCESS: \"200\",\n  CREATED: \"201\",\n  UPDATED: \"202\",\n  AUTHEN_FALSE:\"401\"\n}\n\nexport default STATUS_CODE\n","import axios from \"axios\";\r\nimport * as Config from '../../constant/config'\r\n\r\n\r\nexport default function callApi(endpoint,method,body){\r\n    return axios({\r\n        method:method,\r\n        url:`${Config.API_ENDPOINT_SERVER}/${endpoint}`,\r\n        data:body,\r\n        header:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}","import callApi from \"./axios\";\r\nimport StatusCode from '../../constant/STATUS_CODE'\r\n\r\n\r\nclass axiosService {\r\n    get(endpoint,body){\r\n        return callApi(endpoint,\"GET\",body).then(res => {\r\n            if(res.status==StatusCode.SUCCESS){\r\n                return res.data\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n\r\n    post(endpoint,body){\r\n        return callApi(endpoint,'POST',JSON.parse(JSON.stringify(body))).then(res=>{\r\n            if(res.status==StatusCode.SUCCESS){\r\n                return res\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err.response)\r\n        })\r\n    }\r\n}\r\n\r\nexport default new axiosService()","import axiosService from '../../services/axiosService'\r\n\r\n\r\nexport const getScans = (uri) => {\r\n    return axiosService.get(`${uri}` , {})\r\n}\r\n","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport scanAction from \"../../action/scanAction/scanAction\";\r\nimport * as Api from '../../api/scanApi'\r\n\r\n\r\nfunction * getScanAction({payload}) {\r\n    let resp = yield call(Api.getScans,\"api/scans\");\r\n    const {status, scans} = resp;\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(scanAction.getScanSuccess(scans));\r\n    }else{\r\n        yield put(scanAction.getScanFaild());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* getScanSaga() {\r\n    yield takeLatest(config.GET_SCAN_ACTION,getScanAction)\r\n}\r\n\r\nexport default getScanSaga;\r\n","import axiosService from '../../services/axiosService'\r\n\r\n\r\n\r\nexport const getSignatures = (uri) => {\r\n    return axiosService.get(`${uri}` , {})\r\n}","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport signaturesAction from \"../../action/signaturesAction\";\r\nimport * as Api from '../../api/signaturesApi'\r\n\r\n\r\nfunction * getSignaturesAction({payload}) {\r\n    let resp = yield call(Api.getSignatures,\"api/signatures\");\r\n    const {status, signatures} = resp;\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(signaturesAction.getSignaturesSuccess(signatures));\r\n    }else{\r\n        yield put(signaturesAction.getSignaturesFaild());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* getSignaturesSaga() {\r\n    yield takeLatest(config.GET_SIGNATURE_ACTION,getSignaturesAction)\r\n}\r\n\r\nexport default getSignaturesSaga;","import axiosService from '../../services/axiosService'\r\n\r\n\r\n\r\nexport const getSummary = (uri) => {\r\n    return axiosService.get(`${uri}` , {})\r\n}","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport summaryAction from \"../../action/summaryAction\";\r\nimport * as Api from '../../api/summaryApi'\r\n\r\n\r\nfunction * getSummaryAction({payload}) {\r\n    let resp = yield call(Api.getSummary,\"api/stats/vuln\");\r\n    const {status,stats} = resp;\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(summaryAction.getSummarySuccess(stats));\r\n    }else{\r\n        yield put(summaryAction.getSummaryFaild());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* getSummarySaga() {\r\n    yield takeLatest(config.GET_SUMMARY_ACTION,getSummaryAction)\r\n}\r\n\r\nexport default getSummarySaga;","import axiosService from '../../services/axiosService'\r\n\r\n\r\n\r\nexport const getSignStat = (uri) => {\r\n    return axiosService.get(`${uri}` , {})\r\n}","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport signStatAction from \"../../action/signStatAction\";\r\nimport * as Api from '../../api/signStatApi'\r\n\r\n\r\nfunction * getSignStatAction({payload}) {\r\n    let resp = yield call(Api.getSignStat,\"api/stats/sign\");\r\n    const {status,data,categories} = resp\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(signStatAction.getSignStatSuccess(data,categories));\r\n    }else{\r\n        yield put(signStatAction.getSignStatFaild());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* getSignStatSaga() {\r\n    yield takeLatest(config.GET_SIGN_STAT_ACTION,getSignStatAction)\r\n}\r\n\r\nexport default getSignStatSaga;","\r\nimport axiosService from '../../services/axiosService'\r\n\r\n\r\nexport const getScanDetails = (uri) => {\r\n    return axiosService.get(`${uri}` , {})\r\n}","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport scandetailAction from \"../../action/scanDetailAction\";\r\nimport * as Api from '../../api/scandetailAPI'\r\n\r\n\r\nfunction * getScandetailAction({payload}) {\r\n    var {id} = payload\r\n    let resp = yield call(Api.getScanDetails,\"api/scan/\"+id+\"/\");\r\n    const { status, records} = resp;\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(scandetailAction.getScandetailSuccess(records));\r\n    }else{\r\n        yield put(scandetailAction.getScandetail());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* getScandetailSaga() {\r\n    yield takeLatest(config.GET_SCANDETAIL_ACTION,getScandetailAction)\r\n}\r\n\r\nexport default getScandetailSaga;","import axiosService from '../../services/axiosService'\r\n\r\n\r\nexport const addScan = (uri,data) => {\r\n    debugger\r\n    return axiosService.post(`${uri}` , {data})\r\n}\r\n","import * as config from \"../../../constant/config\";\r\nimport {call, delay, put, takeLatest} from \"redux-saga/effects\";\r\nimport STATUS_CODE from \"../../../constant/STATUS_CODE\";\r\nimport addScanAction from \"../../action/addScanAction\";\r\nimport * as Api from '../../api/addScanApi'\r\n\r\n\r\nfunction * addScanActions({payload}) {\r\n    debugger\r\n    var {scan} = payload\r\n    let resp = yield call(Api.addScan,\"api/addScan\",scan);\r\n    const { status, records} = resp;\r\n    yield delay(1000);\r\n    if(STATUS_CODE.SUCCESS==status){\r\n        yield put(addScanAction.addScanSuccess());\r\n    }else{\r\n        yield put(addScanAction.addScanFaild());\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* addScanSaga() {\r\n    yield takeLatest(config.ADD_SCAN_ACTION,addScanActions)\r\n}\r\n\r\nexport default addScanSaga;","import {fork} from \"redux-saga/effects\";\r\nimport scanSaga from './scanSaga/scanSaga'\r\nimport signaturesSaga from './signaturesSaga'\r\nimport summarySaga from './summarySaga'\r\nimport signStatSaga from \"./signaturesStatSaga\";\r\nimport getScandetailSaga from \"./scandetailSaga\";\r\nimport addScanSaga from \"./addScanSaga\";\r\n\r\n\r\nfunction* rootSaga(){\r\n    yield fork(scanSaga)\r\n    yield fork(signaturesSaga)\r\n    yield fork(summarySaga)\r\n    yield fork(signStatSaga)\r\n    yield fork(getScandetailSaga)\r\n    yield fork(addScanSaga)\r\n}\r\n\r\nexport default rootSaga","import * as config from '../../../constant/config'\r\nconst initial = {\r\n    loading:false\r\n}\r\n\r\nconst ScanReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.GET_SCAN_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.GET_SCAN_SUCCESS:{\r\n            return {...state,loading:false,data:action.data}\r\n        }\r\n        case config.GET_SCAN_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ScanReducer;\r\n","import * as config from '../../../constant/config'\r\nconst initial = {\r\n    loading:false\r\n}\r\n\r\nconst SignaturesReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.GET_SIGNATURE_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.GET_SIGNATURE_SUCCESS:{\r\n            return {...state,loading:false,data:action.data}\r\n        }\r\n        case config.GET_SIGNATURE_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SignaturesReducer;","import * as config from '../../../constant/config'\r\nconst initial = {\r\n    loading:false\r\n}\r\n\r\nconst SummaryReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.GET_SUMMARY_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.GET_SUMMARY_SUCCESS:{\r\n            return {...state,loading:false,data:action.data}\r\n        }\r\n        case config.GET_SUMMARY_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SummaryReducer;","import * as config from '../../../constant/config'\r\n\r\nconst initial = {\r\n    loading:false\r\n}\r\n\r\nconst SignStatReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.GET_SIGN_STAT_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.GET_SIGN_STAT_SUCCESS:{\r\n            const data = [];\r\n            const categories = [];\r\n            for (let i =0;i<action.data.length;i=i+1){\r\n                data.push(action.data[i])\r\n                categories.push(action.categories[i])\r\n            }\r\n            return {...state,loading:false,data:data,categories:categories}\r\n        }\r\n        case config.GET_SIGN_STAT_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default SignStatReducer;","import * as config from '../../../constant/config'\r\nconst initial = {\r\n    loading:false\r\n}\r\n\r\nconst ScandetailReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.GET_SCANDETAIL_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.GET_SCANDETAIL_SUCCESS:{\r\n            var data = action.data\r\n            for(var i = 0;i<data.length;i=i+1){\r\n                var newResRaw = atob(data[i].ResRaw)\r\n                var newReqRaw = atob(data[i].ReqRaw)\r\n                data[i].ReqRaw=newReqRaw\r\n                data[i].ResRaw=newResRaw\r\n            }\r\n            return {...state,loading:false, data:data}\r\n        }\r\n        case config.GET_SCANDETAIL_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        case config.SET_SCANID_ACTION: {\r\n            return{...state, id: action.payload.id}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ScandetailReducer;","import * as config from '../../../constant/config'\r\nimport {toast} from 'react-toastify';\r\n\r\nconst initial = {\r\n    loading:false,\r\n    isSuccess:false\r\n}\r\n\r\nconst AddScanReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case config.ADD_SCAN_ACTION: {\r\n            return {...state,loading: true}\r\n        }\r\n        case config.ADD_SCAN_SUCCESS:{\r\n            toast.success(\"Add New Record Success\")\r\n            return {...state,loading:false,isSuccess: true}\r\n        }\r\n        case config.ADD_SCAN_FAILED:{\r\n            return {...state,loading: false}\r\n        }\r\n        case config.RESET_IS_SUCCESS_ADD_SCAN:{\r\n            return{...state,isSuccess: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AddScanReducer;","import {combineReducers} from \"redux\"\r\nimport ScanReducer from \"./scanReducer\";\r\nimport SignaturesReducer from './signaturesReducer'\r\nimport SummaryReducer from \"./summaryReducer\";\r\nimport SignStatReducer from \"./signStatReducer\";\r\nimport ScandetailReducer from './scandetailReducer'\r\nimport AddScanReducer from \"./addScanReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    ScanReducer: ScanReducer,\r\n    SignaturesReducer:SignaturesReducer,\r\n    SummaryReducer:SummaryReducer,\r\n    SignStatReducer:SignStatReducer,\r\n    ScandetailReducer:ScandetailReducer,\r\n    AddScanReducer:AddScanReducer,\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore,compose} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport mySaga from '../saga/sagas'\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\n\r\nvar initialState = {\r\n    status : false\r\n}\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n\r\nconst store = createStore(rootReducer,{},composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n\r\n\r\nexport default store;\r\n\r\nsagaMiddleware.run(mySaga)","import React,{lazy} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/storeConfig/store\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst LazyApp = lazy(() => import(\"./App\"))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\r\n    GET_SCAN_FAILED,GET_SCAN_SUCCESS,GET_SCAN_ACTION\r\n} from \"../../../constant/config\";\r\n\r\nconst ShowScanActions = {\r\n    getScan,\r\n    getScanSuccess,\r\n    getScanFaild,\r\n}\r\n\r\nfunction getScanFaild() {\r\n    return{\r\n        type: GET_SCAN_FAILED,\r\n        payload:{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction getScanSuccess(scans) {\r\n    return{\r\n        type: GET_SCAN_SUCCESS,\r\n        data: scans\r\n    }\r\n}\r\n\r\nfunction getScan() {\r\n    return {\r\n        type: GET_SCAN_ACTION,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ShowScanActions;\r\n","import {\r\n    GET_SCANDETAIL_FAILED,GET_SCANDETAIL_SUCCESS,GET_SCANDETAIL_ACTION,SET_SCANID_ACTION\r\n} from \"../../../constant/config\";\r\n\r\nconst ShowScandetailActions = {\r\n    getScandetail,\r\n    getScandetailSuccess,\r\n    getScandetailFaild,\r\n    setScanID\r\n}\r\n\r\nfunction getScandetailFaild() {\r\n    return{\r\n        type: GET_SCANDETAIL_FAILED,\r\n        payload:{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction getScandetailSuccess(records) {\r\n    return{\r\n        type: GET_SCANDETAIL_SUCCESS,\r\n        data: records\r\n    }\r\n}\r\n\r\nfunction getScandetail(id) {\r\n    return {\r\n        type: GET_SCANDETAIL_ACTION,\r\n        payload:{\r\n            id:id\r\n        }\r\n    }\r\n}\r\n\r\nfunction setScanID(id) {\r\n    return{\r\n        type: SET_SCANID_ACTION,\r\n        payload: {\r\n            id:id\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default ShowScandetailActions;","export const API_ENDPOINT_SERVER = \"http://127.0.0.1:5000\"\r\n\r\nexport const GET_SCAN_FAILED = \"GET_SCAN_FAILED\"\r\nexport const GET_SCAN_SUCCESS = \"GET_SCAN_SUCCESS\"\r\nexport const GET_SCAN_ACTION = \"GET_SCAN_ACTION\"\r\n\r\nexport const GET_SIGNATURE_FAILED = \"GET_SIGNATURE_FAILED\"\r\nexport const GET_SIGNATURE_SUCCESS = \"GET_SIGNATURE_SUCCESS\"\r\nexport const GET_SIGNATURE_ACTION = \"GET_SIGNATURE_ACTION\"\r\n\r\nexport const GET_SUMMARY_FAILED = \"GET_SUMMARY_FAILED\"\r\nexport const GET_SUMMARY_SUCCESS = \"GET_SUMMARY_SUCCESS\"\r\nexport const GET_SUMMARY_ACTION = \"GET_SUMMARY_ACTION\"\r\n\r\nexport const GET_SIGN_STAT_FAILED = \"GET_SIGN_STAT_FAILED\"\r\nexport const GET_SIGN_STAT_SUCCESS = \"GET_SIGN_STAT_SUCCESS\"\r\nexport const GET_SIGN_STAT_ACTION = \"GET_SIGN_STAT_ACTION\"\r\n\r\nexport const GET_SCANDETAIL_FAILED = \"GET_SCANDETAIL_FAILED\"\r\nexport const GET_SCANDETAIL_SUCCESS = \"GET_SCANDETAIL_SUCCESS\"\r\nexport const GET_SCANDETAIL_ACTION = \"GET_SCANDETAIL_ACTION\"\r\n\r\nexport const SET_SCANID_ACTION = \"SET_SCANID_ACTION\"\r\n\r\nexport const ADD_SCAN_FAILED = \"ADD_SCAN_FAILED\"\r\nexport const ADD_SCAN_SUCCESS = \"ADD_SCAN_SUCCESS\"\r\nexport const ADD_SCAN_ACTION = \"ADD_SCAN_ACTION\"\r\n\r\nexport const RESET_IS_SUCCESS_ADD_SCAN = \"RESET_IS_SUCCESS_ADD_SCAN\"\r\n\r\n","import {\r\n    GET_SIGNATURE_FAILED,GET_SIGNATURE_SUCCESS,GET_SIGNATURE_ACTION\r\n} from \"../../../constant/config\";\r\n\r\nconst ShowSignaturesActions = {\r\n    getSignatures,\r\n    getSignaturesSuccess,\r\n    getSignaturesFaild,\r\n}\r\n\r\nfunction getSignaturesFaild() {\r\n    return{\r\n        type: GET_SIGNATURE_FAILED,\r\n        payload:{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSignaturesSuccess(signatures) {\r\n    return{\r\n        type: GET_SIGNATURE_SUCCESS,\r\n        data: signatures\r\n    }\r\n}\r\n\r\nfunction getSignatures() {\r\n    return {\r\n        type: GET_SIGNATURE_ACTION,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ShowSignaturesActions;","import {\r\n    GET_SIGN_STAT_ACTION,GET_SIGN_STAT_FAILED,GET_SIGN_STAT_SUCCESS\r\n} from \"../../../constant/config\";\r\n\r\nconst ShowSignStatActions = {\r\n    getSignStat,\r\n    getSignStatSuccess,\r\n    getSignStatFaild,\r\n}\r\n\r\nfunction getSignStatFaild() {\r\n    return{\r\n        type: GET_SIGN_STAT_FAILED,\r\n        payload:{\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSignStatSuccess(data,categories) {\r\n    return{\r\n        type: GET_SIGN_STAT_SUCCESS,\r\n        data: data,\r\n        categories:categories\r\n    }\r\n}\r\n\r\nfunction getSignStat() {\r\n    return {\r\n        type: GET_SIGN_STAT_ACTION,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ShowSignStatActions;"],"sourceRoot":""}